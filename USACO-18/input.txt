0 5
2 2
2 3
1 0
0 1 
3 2

sort(ts2, ts2+t);
    
    int lower[10000];
    int lsize = 2;
    lower[0] = 0;
    lower[1] = 1;
    
    for (int i = 2; i < t; i++)
    {
        int j = lsize/2;
        int u = lsize;
        int l = 0;
        while (j>0&&j<lsize&&u>l)
        {
//            if (j>0&&j<usize)
//            {
                int l1x = ts2[lower[j]].X-ts2[lower[j-1]].X;
                int l1y = -ts2[lower[j]].Y+ts2[lower[j-1]].Y;
                int l2x = ts2[i].X-ts2[lower[j]].X;
                int l2y = -ts2[i].Y+ts2[lower[j]].Y;
                int l3x = ts2[lower[j+1]].X-ts2[lower[j]].X;
                int l3y = -ts2[lower[j+1]].Y+ts2[lower[j]].Y;
                int l4x = ts2[i].X-ts2[lower[j+1]].X;
                int l4y = -ts2[i].Y+ts2[lower[j+1]].Y;
                int cross1 = l1x*l2y - l1y*l2x;
                int cross2 = l3x*l4y - l3y*l4x;
                if (cross1 <= 0 && cross2 > 0)
                {
                    break;
                }
                if (cross1 > 0)
                {
                    u = j;
                    j = (u-l)/2+l;
                }
                if (cross2 <= 0)
                {
                    l = j+1;
                    j = (u-l)/2+l;
                }
//            }
        }
        lsize = j+1;
        lower[j] = i;
